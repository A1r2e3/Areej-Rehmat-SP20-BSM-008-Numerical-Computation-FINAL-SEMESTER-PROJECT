{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Bisection method:\n",
    "\n",
    "# Bisection Method: \n",
    "\n",
    "In Mathematics, the bisection method is a straightforward technique to\n",
    "find numerical solutions of an equation with one unknown. Among all the\n",
    "numerical methods, the bisection method is the simplest one to solve the\n",
    "transcendental equation.\n",
    "\n",
    "Bisection Method Definition:\n",
    "\n",
    "The bisection method is used to find the [roots of a\n",
    "polynomial ](https://byjus.com/maths/roots-of-polynomials/)equation. It\n",
    "separates the interval and subdivides the interval in which the root of\n",
    "the equation lies. The principle behind this method is the intermediate\n",
    "theorem for continuous functions. It works by narrowing the gap between\n",
    "the positive and negative intervals until it closes in on the correct\n",
    "answer. This method narrows the gap by taking the average of the\n",
    "positive and negative intervals. It is a simple method and it is\n",
    "relatively slow. The bisection method is also known as interval halving\n",
    "method, root-finding method, binary search method or dichotomy method.\n",
    "\n",
    "Let us consider a continuous function “f” which is defined on the closed\n",
    "interval \\[a, b\\], is given with f(a) and f(b) of different signs. Then\n",
    "by intermediate theorem, there exists a point x belongs to (a, b) for\n",
    "which f(x) = 0.\n",
    "\n",
    "Bisection Method Algorithm:\n",
    "\n",
    "Follow the below procedure to get the solution for the continuous\n",
    "function:\n",
    "\n",
    "For any continuous function f(x),\n",
    "\n",
    "-   Find two points, say a and b such that a \\< b and f(a)\\* f(b) \\< 0\n",
    "\n",
    "-   Find the midpoint of a and b, say “t”\n",
    "\n",
    "-   t is the root of the given function if f(t) = 0; else follow the\n",
    "    next step\n",
    "\n",
    "-   Divide the interval \\[a, b\\] – If f(t)\\*f(a) \\<0, there exist a root\n",
    "    between t and a  \n",
    "    – else if f(t) \\*f (b) \\< 0, there exist a root between t and b\n",
    "\n",
    "-   Repeat above three steps until f(t) = 0.\n",
    "\n",
    "The bisection method is an approximation method to find the roots of the\n",
    "given equation by repeatedly dividing the interval. This method will\n",
    "divide the interval until the resulting interval is found, which is\n",
    "extremely small.\n",
    "\n",
    "Bisection Method Example\n",
    "\n",
    "**Question:** \n",
    "\n",
    "Determine the root of the given equation x<sup>2</sup>-3 = 0 for x ∈\n",
    "\\[1, 2\\]\n",
    "\n",
    "**Solution:**\n",
    "\n",
    "Given: x<sup>2</sup>-3 = 0\n",
    "\n",
    "Let f(x) = x<sup>2</sup>-3\n",
    "\n",
    "Now, find the value of f(x) at a= 1 and b=2.\n",
    "\n",
    "f(x=1) = 1<sup>2</sup>-3 = 1 – 3 = -2 \\< 0\n",
    "\n",
    "f(x=2) = 2<sup>2</sup>-3 = 4 – 3 = 1 \\> 0\n",
    "\n",
    "The given function is continuous, and the root lies in the interval \\[1,\n",
    "2\\].\n",
    "\n",
    "Let “t” be the midpoint of the interval.\n",
    "\n",
    "I.e., t = (1+2)/2\n",
    "\n",
    "t =3 / 2\n",
    "\n",
    "t = 1.5\n",
    "\n",
    "Therefore, the value of the function at “t” is\n",
    "\n",
    "f(t) = f(1.5) = (1.5)<sup>2</sup>-3 = 2.25 – 3 = -0.75 \\< 0\n",
    "\n",
    "If f(t)\\<0, assume a = t.\n",
    "\n",
    "and\n",
    "\n",
    "If f(t)\\>0, assume b = t.\n",
    "\n",
    "f(t) is negative, so a is replaced with t = 1.5 for the next iterations.\n",
    "\n",
    "The iterations for the given functions are:\n",
    "\n",
    "| **Iterations** | **a**  | **b**  | **t**  | **f(a)** | **f(b)** | **f(t)** |\n",
    "|----------------|--------|--------|--------|----------|----------|----------|\n",
    "| **1**          | 1      | 2      | 1.5    | -2       | 1        | -0.75    |\n",
    "| **2**          | 1.5    | 2      | 1.75   | -0.75    | 1        | 0.062    |\n",
    "| **3**          | 1.5    | 1.75   | 1.625  | -0.75    | 0.0625   | -0.359   |\n",
    "| **4**          | 1.625  | 1.75   | 1.6875 | -0.3594  | 0.0625   | -0.1523  |\n",
    "| **5**          | 1.6875 | 1.75   | 1.7188 | -01523   | 0.0625   | -0.0457  |\n",
    "| **6**          | 1.7188 | 1.75   | 1.7344 | -0.0457  | 0.0625   | 0.0081   |\n",
    "| **7**          | 1.7188 | 1.7344 | 1.7266 | -0.0457  | 0.0081   | -0.0189  |\n",
    "\n",
    "So, at the seventh iteration, we get the final interval \\[1.7266,\n",
    "1.7344\\]\n",
    "\n",
    "Hence, 1.7344 is the approximated solution.\n",
    "\n",
    "### Advantages of Bisection Method\n",
    "\n",
    "-   Guaranteed convergence. The bracketing approach is known as the\n",
    "    bisection method, and it is always convergent.\n",
    "\n",
    "-   Errors can be managed. Increasing the number of iterations in the\n",
    "    bisection method always results in a more accurate root.\n",
    "\n",
    "-   Doesn't demand complicated calculations. There are no complicated\n",
    "    calculations required when using the bisection method. To use the\n",
    "    bisection method, we only need to take the average of two values.\n",
    "\n",
    "-   Error bound is guaranteed. There is a guaranteed error bound in this\n",
    "    technique, and it reduces with each repetition. Each cycle reduces\n",
    "    the error bound by 12 per cent.\n",
    "\n",
    "-   The bisection method is simple and straightforward to programme on a\n",
    "    computer.\n",
    "\n",
    "-   In the case of several roots, the bisection procedure is quick.\n",
    "\n",
    "### Disadvantages of Bisection Method\n",
    "\n",
    "-   Although the Bisection method's convergence is guaranteed, it is\n",
    "    often slow.\n",
    "\n",
    "-   Choosing a guess that is close to the root may necessitate numerous\n",
    "    iterations to converge.\n",
    "\n",
    "-   Some equations' roots cannot be found. Because there are no\n",
    "    bracketing values, like f(x) = x².\n",
    "\n",
    "-   Its rate of convergence is linear.\n",
    "\n",
    "-   It is incapable of determining complex roots.\n",
    "\n",
    "-   If the guess interval contains discontinuities, it cannot be used.\n",
    "\n",
    "-   It cannot be applied over an interval where the function returns\n",
    "    values of the same sign.\n",
    "\n",
    "### \n",
    "\n",
    "### Bisection Method Problems:\n",
    "\n",
    "The best way of understanding how the algorithm works is by looking at a\n",
    "bisection method example and solving it by using the bisection method\n",
    "formula\n",
    "\n",
    "False Position Method:\n",
    "\n",
    "# False Position Method\n",
    "\n",
    "In mathematics, an ancient method of solving an equation in one variable\n",
    "is the **false position method **(method of false\n",
    "position)** **or** regula falsi method**. In simple words, the method is\n",
    "described as the trial-and-error approach of using “false” or “test”\n",
    "values for the variable and then altering the test value according to\n",
    "the result.\n",
    "\n",
    "## False Position Method (or) Regula Falsi Method\n",
    "\n",
    "Consider an equation f(x) = 0, which contains only one variable, i.e. x.\n",
    "\n",
    "To find the real root of the equation f(x) = 0, we consider a\n",
    "sufficiently small interval (a, b) where a \\< b such that f(a) and f(b)\n",
    "will have opposite signs. According to the [intermediate value\n",
    "theorem](https://byjus.com/maths/intermediate-value-theorem/), this\n",
    "implies a root lies between a and b.\n",
    "\n",
    "Also, the curve y = f(x) will meet the x-axis at a certain point between\n",
    "A\\[a, f(a)\\] and B\\[b, f(b)\\].\n",
    "\n",
    "Now, the equation of the chord joining A\\[a, f(a)\\] and B\\[b, f(b)\\] is\n",
    "given by:\n",
    "\n",
    "\\\\(\\\\begin{array}{l}y-f(a)=\\\\frac{f(b)-f(a)}{(b-a)}.(x-a)\\\\end{array}\n",
    "\\\\)\n",
    "\n",
    "Let y = 0 be the point of intersection of the chord equation (given\n",
    "above) with the x-axis. Then,\n",
    "\n",
    "\\\\(\\\\begin{array}{l}-f(a)=\\\\frac{f(b)-f(a)}{(b-a)}.(x-a)\\\\end{array} \\\\)\n",
    "\n",
    "This can be simplified as:\n",
    "\n",
    "\\\\(\\\\begin{array}{l}\\\\frac{-f(a)(b-a)}{f(b)-f(a)}=x-a\\\\end{array} \\\\)\n",
    "\n",
    "\\\\(\\\\begin{array}{l}\\\\frac{af(a)-bf(a)}{f(b)-f(a)}+a=x\\\\end{array} \\\\)\n",
    "\n",
    "\\\\(\\\\begin{array}{l}\\\\Rightarrow\n",
    "x=\\\\frac{af(a)-bf(a)+af(b)-af(a)}{f(b)-f(a)}\\\\end{array} \\\\)\n",
    "\n",
    "\\\\(\\\\begin{array}{l}\\\\Rightarrow\n",
    "x=\\\\frac{af(b)-bf(a)}{f(b)-f(a)}\\\\end{array} \\\\)\n",
    "\n",
    "Thus, the first approximation is x<sub>1</sub> = \\[af(b) – bf(a)\\]/\n",
    "\\[f(b) – f(a)\\]\n",
    "\n",
    "Also, x<sub>1</sub> is the root of f(x) if f(x<sub>1</sub>) = 0.\n",
    "\n",
    "If f(x<sub>1</sub>) ≠ 0 and if f(x<sub>1</sub>) and f(a) have opposite\n",
    "signs, then we can write the second approximation as:\n",
    "\n",
    "x<sub>2</sub> = \\[af(x<sub>1</sub>) – x<sub>1</sub>f(a)\\]/\n",
    "\\[f(x<sub>1</sub>) – f(a)\\]\n",
    "\n",
    "Similarly, we can estimate x<sub>3</sub>, x<sub>4</sub>, x<sub>5</sub>,\n",
    "and so on.\n",
    "\n",
    "Geometrical representation of the roots of the equation f(x) = 0 can be\n",
    "shown as:\n",
    "\n",
    "**Question:**\n",
    "\n",
    "Find a root for the equation 2e<sup>x</sup> sin x = 3 using the false\n",
    "position method and correct it to three decimal places with three\n",
    "iterations.\n",
    "\n",
    "**Solution:**\n",
    "\n",
    "Given equation: 2e<sup>x</sup> sin x = 3\n",
    "\n",
    "This can be written as: 2e<sup>x</sup> sin x – 3 = 0\n",
    "\n",
    "Let f(x) = 2e<sup>x</sup> sin x – 3\n",
    "\n",
    "So, f(0) = 2e<sup>0</sup> sin 0 – 3\n",
    "\n",
    "= 0 – 3\n",
    "\n",
    "= -3 \\< 0\n",
    "\n",
    "And\n",
    "\n",
    "f(1) = 2e<sup>1</sup> sin 1 – 3\n",
    "\n",
    "= 2e sin 1 – 3\n",
    "\n",
    "= 1.5747 \\> 0\n",
    "\n",
    "That means the root of f(x) lies between 0 and 1.\n",
    "\n",
    "Let a = 0 and b = 1.\n",
    "\n",
    "The first approximation = x<sub>1</sub> = \\[af(b) – bf(a)\\]/ \\[f(b) –\n",
    "f(a)\\]\n",
    "\n",
    "= \\[0(1.5747) – 1(-3)\\]/ \\[1.5747 – (-3)\\]\n",
    "\n",
    "= 3/4.5747\n",
    "\n",
    "= 0.6557\n",
    "\n",
    "Thus, x<sub>1</sub> = 0.6557\n",
    "\n",
    "Now, substitute x = 0.6557 in f(x).\n",
    "\n",
    "So, f(0.6557) = 2e<sup>0.6557</sup> sin(0.6557) – 3\n",
    "\n",
    "= 2.3493 – 3\n",
    "\n",
    "= -0.6507 \\< 0\n",
    "\n",
    "As we know, f(1) \\> 0\n",
    "\n",
    "That means a root lies between 0.6557 and 1.\n",
    "\n",
    "Let a = 0.6557\n",
    "\n",
    "The second approximation = x<sub>2</sub> = \\[af(x<sub>1</sub>) –\n",
    "x<sub>1</sub>f(a)\\]/ \\[f(x<sub>1</sub>) – f(a)\\]\n",
    "\n",
    "= \\[0.6557(1.5747) – 1(-0.6507)\\]/ \\[1.5747 – (-0.6507)\\]\n",
    "\n",
    "= (1.0325 + 0.6507)/(2.2254)\n",
    "\n",
    "= 1.6832/2.2254\n",
    "\n",
    "= 0.7563\n",
    "\n",
    "Therefore, x<sub>2</sub> = 0.7563\n",
    "\n",
    "Let us substitute 0.7563 in f(x).\n",
    "\n",
    "So, f(0.7563) = 2e<sup>0.7563</sup> sin(0.7563) – 3\n",
    "\n",
    "= 2.9239 – 3\n",
    "\n",
    "= -0.0761 \\< 0\n",
    "\n",
    "We know that f(1) \\> 0\n",
    "\n",
    "Thus, a root lies between 0.7563 and 1.\n",
    "\n",
    "Hence, the third approximation = x<sub>3</sub> = \\[af(x<sub>2</sub>) –\n",
    "x<sub>2</sub>f(a)\\]/ \\[f(x<sub>2</sub>) – f(a)\\]\n",
    "\n",
    "= \\[(0.7563)(1.5747) – 1(-0.0761)\\]/ \\[1.5747 – (-0.0761)\\]\n",
    "\n",
    "= (1.1909 + 0.0761)/1.6508\n",
    "\n",
    "= 1.2670/1.6508\n",
    "\n",
    "= 0.7675\n",
    "\n",
    "So, x<sub>3</sub> = 0.7675\n",
    "\n",
    "Therefore, the best approximation of the root up to three decimal places\n",
    "is 0.768 (up to three decimal places).\n",
    "\n",
    "Newton’s Raphson Method:\n",
    "\n",
    "# Newton Raphson Method\n",
    "\n",
    "The **Newton Raphson Method** is referred to as one of the most commonly\n",
    "used techniques for finding the roots of given equations. It can be\n",
    "efficiently generalized to find solutions to a system of equations.\n",
    "Moreover, we can show that when we approach the root, the method is\n",
    "quadratically convergent.\n",
    "\n",
    "## Newton Raphson Method Formula\n",
    "\n",
    "Let x<sub>0</sub> be the approximate root of f(x) = 0 and let\n",
    "x<sub>1</sub> = x<sub>0</sub> + h be the correct root. Then\n",
    "f(x<sub>1</sub>) = 0\n",
    "\n",
    "⇒ f(x<sub>0</sub> + h) = 0….(1)\n",
    "\n",
    "By expanding the above equation using [Taylor’s\n",
    "theorem](https://byjus.com/maths/taylor-series/), we get:\n",
    "\n",
    "f(x<sub>0</sub>) + hf<sup>1</sup>(x<sub>0</sub>) + … = 0\n",
    "\n",
    "⇒ h = -f(x<sub>0</sub>) /f’(x<sub>0</sub>)\n",
    "\n",
    "Therefore, x<sub>1</sub> = x<sub>0</sub> – f(x<sub>0</sub>)/\n",
    "f’(x<sub>0</sub>)\n",
    "\n",
    "Now, x<sub>1</sub> is the better approximation than x<sub>0</sub>.\n",
    "\n",
    "Similarly, the successive approximations x<sub>2</sub>, x<sub>3</sub>,\n",
    "…., x<sub>n+1</sub> are given by\n",
    "\n",
    "$$\\begin{matrix}\n",
    "x_{n + 1} = x_{n} - \\frac{f(x_{n})}{f^{'}(x_{n})} \\\\\n",
    "\\end{matrix}$$\n",
    "\n",
    "This is called Newton Raphson formula.\n",
    "\n",
    "### Convergence of Newton Raphson Method\n",
    "\n",
    "The order of convergence of Newton Raphson method is 2 or the\n",
    "convergence is quadratic. It converges if \\|f(x).f’’(x)\\| \\<\n",
    "\\|f’(x)\\|<sup>2</sup>. Also, this method fails if f’(x) = 0.\n",
    "\n",
    "## Solved Examples\n",
    "\n",
    "**Example 1:**\n",
    "\n",
    "Find the cube root of 12 using the Newton Raphson method assuming\n",
    "x<sub>0</sub> = 2.5.\n",
    "\n",
    "**Solution:**\n",
    "\n",
    "We know that, the iterative formula to find both root of a is given by:\n",
    "\n",
    "$$\\begin{matrix}\n",
    "x_{n + 1} = \\frac{1}{b}\\left\\lbrack (b - 1)x_{n} + \\frac{a}{x_{n}^{b - 1}} \\right\\rbrack \\\\\n",
    "\\end{matrix}$$\n",
    "\n",
    "From the given, a = 12, b = 3\n",
    "\n",
    "Let x<sub>0</sub> be the approximate cube root of 12, i.e.,\n",
    "x<sub>0</sub> = 2.5.\n",
    "\n",
    "So, x<sub>1</sub> = (⅓) \\[2x<sub>0</sub> +\n",
    "12/x<sub>0</sub><sup>2</sup>\\]\n",
    "\n",
    "= (⅓) \\[2(2.5) + 12/(2.5)<sup>2</sup>\\]\n",
    "\n",
    "= (⅓) \\[5 + 12/6.25\\]\n",
    "\n",
    "= (⅓)(5 + 1.92)\n",
    "\n",
    "= 6.92/3\n",
    "\n",
    "= 2.306\n",
    "\n",
    "Now,\n",
    "\n",
    "x<sub>2</sub> = (⅓)\\[2x<sub>1</sub> + 12/x<sub>1</sub><sup>2</sup>\\]\n",
    "\n",
    "= (1/3) \\[2(2.306) + 12/(2.306)<sup>2</sup>\\]\n",
    "\n",
    "= (⅓) \\[4.612 + 12/5.3176\\]\n",
    "\n",
    "= (⅓) \\[4.612 + 2.256\\]\n",
    "\n",
    "= 6.868/3\n",
    "\n",
    "= 2.289\n",
    "\n",
    "Therefore, the approximate cube root of 12 is 2.289.\n",
    "\n",
    "**Example 2:**\n",
    "\n",
    "Find a real root of the equation -4x + cos x + 2 = 0, by Newton Raphson\n",
    "method up to four decimal places, assuming x<sub>0</sub> = 0.5.\n",
    "\n",
    "**Solution:**\n",
    "\n",
    "Given equation: -4x + cos x + 2 = 0\n",
    "\n",
    "x<sub>0</sub> = 0/5\n",
    "\n",
    "Let f(x) = -4x + cos x + 2\n",
    "\n",
    "f’(x) = -4 – sin x\n",
    "\n",
    "Now,\n",
    "\n",
    "f(0) = -4(0) + cos 0 + 2 = 1 + 2 = 3 \\> 0\n",
    "\n",
    "f(1) = -4(1) + cos 1 + 2 = -4 + 0.5403 + 2 = -1.4597 \\< 0\n",
    "\n",
    "Thus, a root lies between 0 and 1.\n",
    "\n",
    "Let us find the first approximation.\n",
    "\n",
    "x<sub>1</sub> = x<sub>0</sub> – f(x<sub>0</sub>)/f’(x<sub>0</sub>)\n",
    "\n",
    "= 0.5 – \\[-4(0.5) + cos 0.5 + 2\\]/ \\[-4 – sin 0.5\\]\n",
    "\n",
    "= 0.5 – \\[(-2 + 2 + cos 0.5)/ (-4 – sin 0.4)\\]\n",
    "\n",
    "= 0.5 – \\[cos 0.5/ (-4 – sin 0.5)\\]\n",
    "\n",
    "= 0.5 – \\[0.8775/ (-4 – 0.4794)\\]\n",
    "\n",
    "= 0.5 – (0.8775/-4.4794)\n",
    "\n",
    "= 0.5 + 0.1958\n",
    "\n",
    "= 0. 6958\n",
    "\n",
    "Secant Method:\n",
    "\n",
    "#  Secant Method\n",
    "\n",
    "The **secant method** is a root-finding procedure in numerical analysis\n",
    "that uses a series of roots of secant lines to better approximate a root\n",
    "of a function f. \n",
    "\n",
    "## What is a Secant Method?\n",
    "\n",
    "The tangent line to the curve of y = f(x) with the point of tangency\n",
    "(x<sub>0</sub>, f(x<sub>0</sub>) was used in Newton’s approach. The\n",
    "graph of the tangent line about x = α is essentially the same as the\n",
    "graph of y = f(x) when x<sub>0</sub> ≈ α. The root of the tangent line\n",
    "was used to approximate α.\n",
    "\n",
    "Consider employing an approximating line based on\n",
    "‘[interpolation](https://byjus.com/maths/interpolation/)’. Let’s pretend\n",
    "we have two root estimations of root α, say, x<sub>0</sub> and\n",
    "x<sub>1</sub>. Then, we have a linear function\n",
    "\n",
    "q(x) = a<sub>0</sub> + a<sub>1</sub>x\n",
    "\n",
    "using q(x<sub>0</sub>) = f (x<sub>0</sub>), q(x<sub>1</sub>) = f\n",
    "(x<sub>1</sub>).\n",
    "\n",
    "This line is also known as a secant line. Its formula is as follows:\n",
    "\n",
    "$$\\begin{matrix}\n",
    "q(x) = \\frac{\\left( x_{1} - x \\right)f\\left( x_{0} \\right) + \\left( x - x_{0} \\right)f\\left( x_{1} \\right)}{x_{1} - x_{0}} \\\\\n",
    "\\end{matrix}$$\n",
    "\n",
    "## Secant Method Steps\n",
    "\n",
    "The secant method procedures are given below using equation (1).\n",
    "\n",
    "**Step 1: Initialization**\n",
    "\n",
    "x<sub>0</sub> and x<sub>1</sub> of α are taken as initial guesses.\n",
    "\n",
    "**Step 2: Iteration**\n",
    "\n",
    "In the case of n = 1, 2, 3, …,\n",
    "\n",
    "$$\\begin{matrix}\n",
    "x_{n + 1} = x_{n} - f\\left( x_{n} \\right).\\frac{x_{n} - x_{n - 1}}{f\\left( x_{n} \\right) - f\\left( x_{n - 1} \\right)} \\\\\n",
    "\\end{matrix}$$\n",
    "\n",
    "until a specific criterion for termination has been met (i.e., The\n",
    "desired accuracy of the answer or the maximum number of iterations has\n",
    "been attained).\n",
    "\n",
    "Secant Method Convergence\n",
    "\n",
    "If the initial values x<sub>0 </sub>and x<sub>1</sub> are close enough\n",
    "to the root, the secant method iterates x<sub>n </sub>and converges to a\n",
    "root of function f. The order of convergence is given by φ.\n",
    "\n",
    "The convergence is particularly superliner, but not really quadratic.\n",
    "This solution is only valid under certain technical requirements, such\n",
    "as f being two times continuously differentiable and the root being\n",
    "simple in the question (i.e., having multiplicity 1).\n",
    "\n",
    "There is no certainty that the secant method will converge if the\n",
    "beginning values are not close enough to the root. For instance, if the\n",
    "function f is differentiable on the interval \\[x<sub>0</sub>,\n",
    "x<sub>1</sub>\\], and there is a point on the interval where f’ =0, the\n",
    "algorithm may not converge.\n",
    "\n",
    "Secant Method Advantages and Disadvantages\n",
    "\n",
    "The secant method has the following advantages:\n",
    "\n",
    "-   It converges quicker than a linear rate, making it more convergent\n",
    "    than the bisection method.\n",
    "\n",
    "-   It does not necessitate the usage of the function’s derivative,\n",
    "    which is not available in a number of applications.\n",
    "\n",
    "-   Unlike Newton’s technique, which requires two function evaluations\n",
    "    in every iteration, it only requires one.\n",
    "\n",
    "The secant method has the following drawbacks:\n",
    "\n",
    "-   The secant method may not converge.\n",
    "\n",
    "-   The computed iterates have no guaranteed error bounds.\n",
    "\n",
    "-   If f<sub>0</sub>(α) = 0, it is likely to be challenging. This means\n",
    "    that when x = α, the x-axis is tangent to the graph of y = f(x).\n",
    "\n",
    "-   Newton’s approach is more easily generalized to new ways for solving\n",
    "    nonlinear simultaneous systems of equations.\n",
    "\n",
    "-   **Example:**\n",
    "\n",
    "-   Compute two iterations for the function f(x) = x<sup>3</sup> – 5x +\n",
    "    1 = 0 using the secant method, in which the real roots of the\n",
    "    equation f(x) lies in the interval (0, 1).\n",
    "\n",
    "-   **Solution:**\n",
    "\n",
    "-   Using the given data, we have,\n",
    "\n",
    "-   x<sub>0</sub> = 0, x<sub>1</sub> = 1, and\n",
    "\n",
    "-   f(x<sub>0</sub>) = 1, f(x<sub>1</sub>) = -3\n",
    "\n",
    "-   Using the secant method formula, we can write\n",
    "\n",
    "-   x<sub>2</sub> = x<sub>1</sub> – \\[(x<sub>0</sub> – x<sub>1</sub>) /\n",
    "    (f(x<sub>0</sub>) – f(x<sub>1</sub>))\\]f(x<sub>1</sub>)\n",
    "\n",
    "-   Now, substitute the known values in the formula,\n",
    "\n",
    "-   = 1 – \\[(0 – 1) / ((1-(-3))\\](-3)\n",
    "\n",
    "-   = 0.25.\n",
    "\n",
    "-   Therefore, f(x<sub>2</sub>) = – 0.234375\n",
    "\n",
    "-   Performing the second approximation, ,\n",
    "\n",
    "-   x<sub>3</sub> = x<sub>2</sub> – \\[( x<sub>1</sub> – x<sub>2</sub>) /\n",
    "    (f(x<sub>1</sub>) – f(x<sub>2</sub>))\\]f(x<sub>2</sub>)\n",
    "\n",
    "-   =(- 0.234375) – \\[(1 – 0.25)/(-3 – (- 0.234375))\\](- 0.234375)\n",
    "\n",
    "-   = 0.186441\n",
    "\n",
    "-   Hence, f(x<sub>3</sub>) = 0.074276\n",
    "\n",
    "Fixed Point Iteration Method:\n",
    "\n",
    "Fixed Point Iteration\n",
    "\n",
    "The** fixed point iteration **method in numerical analysis is used to\n",
    "find an approximate solution to algebraic and transcendental equations.\n",
    "Sometimes, it becomes very tedious to find solutions to cubic,\n",
    "bi-quadratic and transcendental equations; then, we can apply specific\n",
    "numerical methods to find the solution; one among those methods is the\n",
    "fixed point iteration method.\n",
    "\n",
    "The fixed point iteration method uses the concept of a fixed point in a\n",
    "repeated manner to compute the solution of the given equation. A fixed\n",
    "point is a point in the domain of a function g such that g(x) = x. In\n",
    "the fixed point iteration method, the given function is algebraically\n",
    "converted in the form of g(x) = x.\n",
    "\n",
    "Fixed Point Iteration Method\n",
    "\n",
    "Suppose we have an equation f(x) = 0, for which we have to find the\n",
    "solution. The equation can be expressed as x = g(x). Choose g(x) such\n",
    "that \\|g’(x)\\| \\< 1 at x = x<sub>o</sub> where x<sub>o,</sub>is some\n",
    "initial guess called fixed point iterative scheme. Then the iterative\n",
    "method is applied by successive approximations given by x<sub>n</sub> =\n",
    "g(x<sub>n\\ –\\ 1</sub>), that is, x<sub>1</sub> = g(x<sub>o</sub>),\n",
    "x<sub>2</sub> = g(x<sub>1</sub>) and so on.\n",
    "\n",
    "Algorithm of Fixed Point Iteration Method\n",
    "\n",
    "-   Choose the initial value x<sub>o</sub> for the iterative method. One\n",
    "    way to choose x<sub>o</sub> is to find the values x = a and x = b\n",
    "    for which f(a) \\< 0 and f(b) \\> 0. By narrowing down the selection\n",
    "    of a and b, take x<sub>o</sub> as the average of a and b.\n",
    "\n",
    "-   Express the given equation, in the form x = g(x) such that \\|g’(x)\\|\n",
    "    \\< 1 at x = x<sub>o</sub>. If there more than one possibility of\n",
    "    g(x), choose the g(x) which has the minimum value of g’(x) at x =\n",
    "    x<sub>o</sub>.\n",
    "\n",
    "-   By applying the successive approximations x<sub>n</sub> =\n",
    "    g(x<sub>n\\ –\\ 1</sub>), if f is a continuous function, we get a\n",
    "    sequence of {x<sub>n</sub>} which converges to a point\n",
    "    l<sub>o</sub>, which is the approximate solution of the given\n",
    "    equation.\n",
    "\n",
    "Important Facts\n",
    "\n",
    "Some interesting facts about the fixed point iteration method are\n",
    "\n",
    "-   The form of x = g(x) can be chosen in many ways. But we choose g(x)\n",
    "    for which \\|g’(x)\\|\\<1 at x = x<sub>o</sub>.\n",
    "\n",
    "-   By the fixed-point iteration method, we get a sequence of\n",
    "    x<sub>n,</sub> which converges to the root of the given equation.\n",
    "\n",
    "-   Lower the value of g’(x), fewer the iterations are required to get\n",
    "    the approximate solution.\n",
    "\n",
    "-   The rate of convergence is more if the value of g’(x) is smaller.\n",
    "\n",
    "-   The method is useful for finding the real roots of the equation,\n",
    "    which is the form of an infinite series.\n",
    "\n",
    "-   The type of convergence seen is linear.\n",
    "\n",
    "-   **Example 1:**\n",
    "\n",
    "-   Find the first approximate root of the equation 2x<sup>3</sup> – 2x\n",
    "    – 5 = 0 up to 4 decimal places.\n",
    "\n",
    "-   **Solution:**\n",
    "\n",
    "-   Given f(x) = 2x<sup>3</sup> – 2x – 5 = 0\n",
    "\n",
    "-   As per the algorithm, we find the value of x<sub>o</sub>, for which\n",
    "    we have to find a and b such that f(a) \\< 0 and f(b) \\> 0\n",
    "\n",
    "-   Now, f(0) = – 5\n",
    "\n",
    "-   f(1) = – 5\n",
    "\n",
    "-   f(2) = 7\n",
    "\n",
    "-   Thus, a = 1 and b = 2\n",
    "\n",
    "-   Therefore, x<sub>o</sub> = (1 + 2)/2 = 1.5\n",
    "\n",
    "-   Now, we shall find g(x) such that \\|g’(x)\\| \\< 1 at x =\n",
    "    x<sub>o</sub>\n",
    "\n",
    "-   2x<sup>3</sup> – 2x – 5 = 0\n",
    "\n",
    "-   ⇒ x = \\[(2x + 5)/2\\]<sup>1/3</sup>\n",
    "\n",
    "-   g(x) = \\[(2x + 5)/2\\]<sup>1/3 </sup>which satisfies \\|g’(x)\\| \\< 1\n",
    "    at x = 1.5\n",
    "\n",
    "-   Now, applying the iterative method x<sub>n,</sub>=\n",
    "    g(x<sub>n\\ –\\ 1</sub>) for n = 1, 2, 3, 4, 5, …\n",
    "\n",
    "-   For n = 1; x<sub>1</sub> = g(x<sub>o</sub>) = \\[{2(1.5) +\n",
    "    5}/2\\]<sup>1/3 </sup>= 1.5874\n",
    "\n",
    "-   For n = 2; x<sub>2</sub> = g(x<sub>1</sub>) = \\[{2(1.5874) +\n",
    "    5}/2\\]<sup>1/3 </sup>= 1.5989\n",
    "\n",
    "-   For n = 3; x<sub>3</sub> = g(x<sub>2</sub>) = \\[{2(1.5989) +\n",
    "    5}/2\\]<sup>1/3 </sup>= 1.60037\n",
    "\n",
    "-   For n = 4; x<sub>4</sub> = g(x<sub>3</sub>) = \\[{2(1.60037) +\n",
    "    5}/2\\]<sup>1/3 </sup>= 1.60057\n",
    "\n",
    "-   For n = 5; x<sub>5</sub> = g(x<sub>4</sub>) = \\[{2(1.60057) +\n",
    "    5}/2\\]<sup>1/3 </sup>= 1.60059\n",
    "\n",
    "-   For n = 6; x<sub>6</sub> = g(x<sub>5</sub>) = \\[{2(1.60059) +\n",
    "    5}/2\\]<sup>1/3 </sup>= 1.600597 ≈ 1.6006\n",
    "\n",
    "-   The approximate root of 2x<sup>3</sup> – 2x – 5 = 0 by the fixed\n",
    "    point iteration method is 1.6006.\n",
    "\n",
    "-   **Example 2:**\n",
    "\n",
    "-   Find the first approximate root of the equation cos x = 3x – 1 up to\n",
    "    4 decimal places.\n",
    "\n",
    "-   **Solution:**\n",
    "\n",
    "-   Let f(x) = cos x – 3x + 1 = 0\n",
    "\n",
    "-   As per the algorithm, we find the value of x<sub>o</sub>, for which\n",
    "    we have to find a and b such that f(a) \\< 0 and f(b) \\> 0\n",
    "\n",
    "-   Now, f(0) = 2\n",
    "\n",
    "-   f(𝜋/2) = -3𝜋/2 – 1 \\< 0\n",
    "\n",
    "-   Hence, x<sub>o </sub>is a value lying between 0 and 𝜋/2, for ease of\n",
    "    calculation let us take x<sub>o</sub> = 0\n",
    "\n",
    "-   Now, we shall find g(x) such that \\|g’(x)\\| \\< 1 at x =\n",
    "    x<sub>o</sub>\n",
    "\n",
    "-   cos x – 3x + 1 = 0\n",
    "\n",
    "-   ⇒ x = (cos x + 1)/3\n",
    "\n",
    "-   Then g(x) = (cos x + 1)/3 which satisfies \\|g’(x)\\| \\< 1 at x = 0\n",
    "\n",
    "-   Now, applying the iterative method x<sub>n,</sub>=\n",
    "    g(x<sub>n\\ –\\ 1</sub>) for n = 1, 2, 3, 4, 5, …\n",
    "\n",
    "-   For n = 1; x<sub>1</sub> = g(x<sub>o</sub>) = (cos 0 + 1)/3 = ⅔ =\n",
    "    0.66667\n",
    "\n",
    "-   For n = 2; x<sub>2</sub> = g(x<sub>1</sub>) = {cos (0.66667) + 1}/3\n",
    "    = 0.595296\n",
    "\n",
    "-   For n = 3; x<sub>3</sub> = g(x<sub>2</sub>) = {cos (0.595296) + 1}/3\n",
    "    = 0.609328\n",
    "\n",
    "-   For n = 4; x<sub>4</sub> = g(x<sub>3</sub>) = {cos (0.609328) + 1}/3\n",
    "    = 0.6066778\n",
    "\n",
    "-   For n = 5; x<sub>5</sub> = g(x<sub>4</sub>) = {cos (0.6066778) +\n",
    "    1}/3 = 0.607182\n",
    "\n",
    "-   For n = 6; x<sub>6</sub> = g(x<sub>5</sub>) = {cos (0.607182) + 1}/3\n",
    "    = 0.607086\n",
    "\n",
    "-   For n = 7; x<sub>7</sub> = g(x<sub>6</sub>) = {cos (0.607086) + 1}/3\n",
    "    = 0.607105\n",
    "\n",
    "-   For n = 8; x<sub>8</sub> = g(x<sub>7</sub>) = {cos (0.607105) + 1}/3\n",
    "    = 0.607101 ≈ 0.6071\n",
    "\n",
    "-   The approximate root of cos x = 3x – 1 by the fixed-point iteration\n",
    "    method is 0.6071.\n",
    "\n",
    "# **What is Interpolation?**  Interpolation is the technique to estimate the value of a mathematical function, for any intermediate value of the independent variable. \n",
    "\n",
    "# \n",
    "\n",
    "# Newton Forward Difference Interpolation:\n",
    "\n",
    "**Forward difference interpolation:**\n",
    "\n",
    "The forward difference table for the above set of data points is given\n",
    "below:\n",
    "\n",
    "| x   | y   | Δy        | Δ<sup>2</sup>y            | Δ<sup>3</sup>y                                     | Δ<sup>4</sup>y                                    |\n",
    "|-----|-----|-----------|---------------------------|----------------------------------------------------|---------------------------------------------------|\n",
    "| x0  | y0  | Δy0=y1-y0 | Δ<sup>2</sup>y0= Δy1- Δy0 | Δ<sup>3</sup>y0= Δ<sup>2</sup>y1- Δ<sup>2</sup>y0  | Δ<sup>4</sup>y0= Δ<sup>3</sup>y1- Δ<sup>3</sup>y0 |\n",
    "| x1  | y1  | Δy1=y2-y1 | Δ<sup>2</sup>y1= Δy2- Δy1 | Δ<sup>3</sup>y1= Δ<sup>2</sup>y12- Δ<sup>2</sup>y1 |                                                   |\n",
    "| x2  | y2  | Δy2=y3-y2 | Δ<sup>2</sup>y2 = Δy3-Δy2 |                                                    |                                                   |\n",
    "| x3  | y3  | Δy3=y4-y3 |                           |                                                    |                                                   |\n",
    "| x4  | y4  |           |                           |                                                    |                                                   |\n",
    "\n",
    "**NEWTON’S GREGORY FORWARD INTERPOLATION FORMULA**:\n",
    "\n",
    "<img src=\"attachment:vertopal_8c166dffc83e48d7a91d80b66074b9ba/media/image1.png\" style=\"width:4.84375in;height:0.20833in\" />\n",
    "\n",
    "**Q. Consider the following set of data points and form a forward\n",
    "difference table.**\n",
    "\n",
    "| X   | 2.0 | 2.25  | 2.50  | 2.75  | 3.0  |\n",
    "|-----|-----|-------|-------|-------|------|\n",
    "| Y   | 9.0 | 10.06 | 11.25 | 12.56 | 14.0 |\n",
    "\n",
    "**Find y (2.35)?**\n",
    "\n",
    "**Ans.** The forward difference table for the given set of data points\n",
    "is given below:\n",
    "\n",
    "** **We have,\n",
    "\n",
    " **x = 2.35,** ( given )\n",
    "\n",
    "**h = x1 – x0** = 2.25 – 2.0 = **0.25**\n",
    "\n",
    "** u = (x-x0) / h** = (2.35-2.0)/0.25 = 0.35/0.25 = **1.4**\n",
    "\n",
    "Now, the forward difference table is as:\n",
    "\n",
    "| x    | y     | Δy               | Δ2y            | Δ3y             | Δ4y            |\n",
    "|------|-------|------------------|----------------|-----------------|----------------|\n",
    "| 2.0  | 9.0   | 10.06-9.0=1.06   | 1.19-1.06=0.13 | 0.12-0.13=-0.01 | 0.01+0.01=0.02 |\n",
    "| 2.25 | 10.06 | 11.25-10.06=1.19 | 1.31-1.19=0.12 | 0.13-0.12=0.01  |                |\n",
    "| 2.50 | 11.25 | 12.56-11.25=1.31 | 1.44-1.31=0.13 |                 |                |\n",
    "| 2.75 | 12.56 | 14.0-12.56=1.44  |                |                 |                |\n",
    "| 3.0  | 14.0  |                  |                |                 |                |\n",
    "\n",
    "**y\n",
    "(2.35**)=9+(1.4)(1.06)+(1.4)(1.4-1)(0.13)/2+(1.4)(1.4-1)(1.4-2)(-0.01)/6+(1.4)(1.4-1)(1.4-2)(1.4-3)(0.02)\\\\24\n",
    "\n",
    "**y (2.35)** = 10.484 + 0.0364 + 0.00056 + 0.000448\n",
    "\n",
    "**y (2.35)** = **10.52141**\n",
    "\n",
    "# Newton’s Divided Difference Interpolation Formula\n",
    "\n",
    "**Newton’s divided difference interpolation formula** is a interpolation\n",
    "technique used when the interval difference is not same for all sequence\n",
    "of values.\n",
    "\n",
    "Suppose f(x<sub>0</sub>), f(x<sub>1</sub>),\n",
    "f(x<sub>2</sub>)………f(x<sub>n</sub>) be the (n+1) values of the function\n",
    "y=f(x) corresponding to the arguments x=x<sub>0</sub>, x<sub>1</sub>,\n",
    "x<sub>2</sub>…x<sub>n</sub>, where interval differences are not same.\n",
    "\n",
    "**Then the first divided difference is given by**\n",
    "\n",
    "<img src=\"attachment:vertopal_8c166dffc83e48d7a91d80b66074b9ba/media/image2.png\" style=\"width:1.42708in;height:0.22917in\" />\n",
    "\n",
    "**The second divided difference is given by**\n",
    "\n",
    "<img src=\"attachment:vertopal_8c166dffc83e48d7a91d80b66074b9ba/media/image3.png\" style=\"width:1.90625in;height:0.22917in\" />\n",
    "\n",
    "and so on…  \n",
    "Divided differences are symmetric with respect to the arguments\n",
    "i.e. **independent of the order of arguments.**  \n",
    "so,**  \n",
    "f\\[x<sub>0</sub>, x<sub>1</sub>\\]=f\\[x<sub>1</sub>, x<sub>0</sub>\\]  \n",
    "f\\[x<sub>0</sub>, x<sub>1</sub>, x<sub>2</sub>\\]=f\\[x<sub>2</sub>,\n",
    "x<sub>1</sub>, x<sub>0</sub>\\]=f\\[x<sub>1</sub>, x<sub>2</sub>,\n",
    "x<sub>0</sub>\\]**  \n",
    "By using first divided difference, second divided difference as so on .A\n",
    "table is formed which is called the divided difference table.\n",
    "\n",
    "**Divided difference table:**\n",
    "\n",
    "| xi  | fi  | F(xi,xj)                |                                           |\n",
    "|-----|-----|-------------------------|-------------------------------------------|\n",
    "| x1  | f1  |                         |                                           |\n",
    "|     |     | f\\[x1,x2\\]= f2-f1/x2-x1 |                                           |\n",
    "| x2  | f2  |                         | f\\[x1,x2,x3\\]=f\\[x3,x2\\]-f\\[x2,x1\\]/x3-x1 |\n",
    "|     |     | f\\[x2,x3\\]= f3-f2/x3-x2 |                                           |\n",
    "| x3  | f3  |                         |                                           |\n",
    "\n",
    "**Advantages of NEWTON’S DIVIDED DIFFERENCE INTERPOLATION FORMULA**\n",
    "\n",
    "-   These are useful for interpolation.\n",
    "\n",
    "-   Through difference table, we can find out the differences in higher\n",
    "    > order.\n",
    "\n",
    "-   Differences at each stage in each of the columns are easily measured\n",
    "    > by subtracting the previous value from its immediately succeeding\n",
    "    > value.\n",
    "\n",
    "-   The differences are found out successively between the two adjacent\n",
    "    > values of the y variable till the ultimate difference vanishes or\n",
    "    > become a constant.\n",
    "\n",
    "**NEWTON’S DIVIDED DIFFERENCE INTERPOLATION FORMULA**\n",
    "\n",
    "<img src=\"attachment:vertopal_8c166dffc83e48d7a91d80b66074b9ba/media/image4.png\" style=\"width:5.375in;height:0.34375in\" />\n",
    "\n",
    "Examples:\n",
    "\n",
    "Input: Value at 7\n",
    "\n",
    "| x      | 5   | 6   | 9   | 11  |\n",
    "|--------|-----|-----|-----|-----|\n",
    "| Y=f(x) | 12  | 13  | 14  | 16  |\n",
    "\n",
    "Output:\n",
    "\n",
    "| x   | y=f(x) | f\\[xi,xj\\] | f\\[xi,xj,xk\\] | \\[xi,xj,xk,xp\\] |\n",
    "|-----|--------|------------|---------------|-----------------|\n",
    "| 5   | 12     |            |               |                 |\n",
    "|     |        | 1          |               |                 |\n",
    "| 6   | 13     |            | -1/6          |                 |\n",
    "|     |        | 1/3        |               | 1/20            |\n",
    "| 9   | 14     |            | 2/15          |                 |\n",
    "|     |        | 1          |               |                 |\n",
    "| 11  | 16     |            |               |                 |\n",
    "\n",
    "value at 7 is 13.47.\n",
    "\n",
    "# Newton Backward Interpolation:\n",
    "\n",
    "# \n",
    "\n",
    "# **Backward Differences**: The differences y1 – y0, y2 – y1, ……, yn – yn–1 when denoted by dy1, dy2, ……, dyn, respectively, are called first backward difference. Thus, the first backward differences are : \n",
    "\n",
    "# \n",
    "\n",
    "# \n",
    "\n",
    "<table>\n",
    "<thead>\n",
    "<tr class=\"header\">\n",
    "<th><h1 id=\"x\">X</h1></th>\n",
    "<th><h1 id=\"y\">Y</h1></th>\n",
    "<th><h1 id=\"y-1\"> ∇y</h1></th>\n",
    "<th><h1 id=\"y-2\">∇<sup>2</sup>y</h1></th>\n",
    "<th><h1 id=\"y-3\">∇<sup>3</sup>y</h1></th>\n",
    "</tr>\n",
    "</thead>\n",
    "<tbody>\n",
    "<tr class=\"odd\">\n",
    "<td><h1 id=\"x0\">x0</h1></td>\n",
    "<td><h1 id=\"y0\">y0</h1></td>\n",
    "<td><h1 id=\"section-5\"></h1></td>\n",
    "<td><h1 id=\"section-6\"></h1></td>\n",
    "<td><h1 id=\"section-7\"></h1></td>\n",
    "</tr>\n",
    "<tr class=\"even\">\n",
    "<td><h1 id=\"section-8\"></h1></td>\n",
    "<td><h1 id=\"section-9\"></h1></td>\n",
    "<td><h1 id=\"y1y1-y0\">∇y1=y1-y0</h1></td>\n",
    "<td><h1 id=\"section-10\"></h1></td>\n",
    "<td><h1 id=\"section-11\"></h1></td>\n",
    "</tr>\n",
    "<tr class=\"odd\">\n",
    "<td><h1 id=\"x1\">x1</h1></td>\n",
    "<td><h1 id=\"y1\">y1</h1></td>\n",
    "<td><h1 id=\"section-12\"></h1></td>\n",
    "<td><h1 id=\"y2y2-y1\">∇<sup>2</sup>y2=∇y2-∇y1</h1></td>\n",
    "<td><h1 id=\"section-13\"></h1></td>\n",
    "</tr>\n",
    "<tr class=\"even\">\n",
    "<td><h1 id=\"section-14\"></h1></td>\n",
    "<td><h1 id=\"section-15\"></h1></td>\n",
    "<td><h1 id=\"y2y2-y1-1\">∇y2=y2-y1</h1></td>\n",
    "<td><h1 id=\"section-16\"></h1></td>\n",
    "<td><h1 id=\"y02y3-2y2\">∇<sup>3</sup>y0=∇<sup>2</sup>y3-∇<sup>2</sup>y2</h1></td>\n",
    "</tr>\n",
    "<tr class=\"odd\">\n",
    "<td><h1 id=\"x2\">x2</h1></td>\n",
    "<td><h1 id=\"y2\">y2</h1></td>\n",
    "<td><h1 id=\"section-17\"> </h1></td>\n",
    "<td><h1 id=\"y3y3-y2\">∇<sup>2</sup>y3=∇y3-∇y2</h1></td>\n",
    "<td><h1 id=\"section-18\"></h1></td>\n",
    "</tr>\n",
    "<tr class=\"even\">\n",
    "<td><h1 id=\"section-19\"></h1></td>\n",
    "<td><h1 id=\"section-20\"></h1></td>\n",
    "<td><h1 id=\"y3y3-y2-1\">∇y3=y3-y2</h1></td>\n",
    "<td><h1 id=\"section-21\"></h1></td>\n",
    "<td><h1 id=\"section-22\"></h1></td>\n",
    "</tr>\n",
    "<tr class=\"odd\">\n",
    "<td><h1 id=\"x3\">x3</h1></td>\n",
    "<td><h1 id=\"y3\">y3</h1></td>\n",
    "<td><h1 id=\"section-23\"></h1></td>\n",
    "<td><h1 id=\"section-24\"></h1></td>\n",
    "<td><h1 id=\"section-25\"></h1></td>\n",
    "</tr>\n",
    "</tbody>\n",
    "</table>\n",
    "\n",
    "# \n",
    "\n",
    "# \n",
    "\n",
    "# **NEWTON’S GREGORY BACKWARD INTERPOLATION FORMULA**:\n",
    "\n",
    "# \n",
    "\n",
    "# p=x<sub>n</sub>h\n",
    "\n",
    "# y(x)=y<sub>n</sub> +p∇y<sub>n</sub>+p(p+1)2!- ∇2y<sub>n</sub>+p(p+1)(p+2)3!- ∇3y<sub>n</sub>+p(p+1)(p+2)(p+3)4!.....\n",
    "\n",
    "# \n",
    "\n",
    "# Find the solution using Newton’s backward difference formula:\n",
    "\n",
    "<table>\n",
    "<thead>\n",
    "<tr class=\"header\">\n",
    "<th><h1 id=\"x-1\">x</h1></th>\n",
    "<th><h1 id=\"fx\">F(x)</h1></th>\n",
    "</tr>\n",
    "</thead>\n",
    "<tbody>\n",
    "<tr class=\"odd\">\n",
    "<td><h1 id=\"section-30\">1891</h1></td>\n",
    "<td><h1 id=\"section-31\">46</h1></td>\n",
    "</tr>\n",
    "<tr class=\"even\">\n",
    "<td><h1 id=\"section-32\">1901</h1></td>\n",
    "<td><h1 id=\"section-33\">66</h1></td>\n",
    "</tr>\n",
    "<tr class=\"odd\">\n",
    "<td><h1 id=\"section-34\">1911</h1></td>\n",
    "<td><h1 id=\"section-35\">81</h1></td>\n",
    "</tr>\n",
    "<tr class=\"even\">\n",
    "<td><h1 id=\"section-36\">1921</h1></td>\n",
    "<td><h1 id=\"section-37\">93</h1></td>\n",
    "</tr>\n",
    "<tr class=\"odd\">\n",
    "<td><h1 id=\"section-38\">1931</h1></td>\n",
    "<td><h1 id=\"section-39\">101</h1></td>\n",
    "</tr>\n",
    "</tbody>\n",
    "</table>\n",
    "\n",
    "# \n",
    "\n",
    "#  x= 1925 Solution:\n",
    "\n",
    "#  The value of table for x and y:\n",
    "\n",
    "<table>\n",
    "<thead>\n",
    "<tr class=\"header\">\n",
    "<th><h1 id=\"x-2\">x</h1></th>\n",
    "<th><h1 id=\"y-4\">Y</h1></th>\n",
    "</tr>\n",
    "</thead>\n",
    "<tbody>\n",
    "<tr class=\"odd\">\n",
    "<td><h1 id=\"section-41\">1891</h1></td>\n",
    "<td><h1 id=\"section-42\">46</h1></td>\n",
    "</tr>\n",
    "<tr class=\"even\">\n",
    "<td><h1 id=\"section-43\">1901</h1></td>\n",
    "<td><h1 id=\"section-44\">66</h1></td>\n",
    "</tr>\n",
    "<tr class=\"odd\">\n",
    "<td><h1 id=\"section-45\">1911</h1></td>\n",
    "<td><h1 id=\"section-46\">81</h1></td>\n",
    "</tr>\n",
    "<tr class=\"even\">\n",
    "<td><h1 id=\"section-47\">1921</h1></td>\n",
    "<td><h1 id=\"section-48\">93</h1></td>\n",
    "</tr>\n",
    "<tr class=\"odd\">\n",
    "<td><h1 id=\"section-49\">1931</h1></td>\n",
    "<td><h1 id=\"section-50\">101</h1></td>\n",
    "</tr>\n",
    "</tbody>\n",
    "</table>\n",
    "\n",
    "#  \n",
    "\n",
    "# Newton’s backward difference interpolation method to find solution\n",
    "\n",
    "Newton,s backward difference table is:\n",
    "\n",
    "| x    | Y   | ∇y  | ∇<sup>2</sup>y | ∇<sup>3</sup>y | ∇<sup>4</sup>y |\n",
    "|------|-----|-----|----------------|----------------|----------------|\n",
    "| 1891 | 46  |     |                |                |                |\n",
    "|      |     | 20  |                |                |                |\n",
    "| 1901 | 66  |     | -5             |                |                |\n",
    "|      |     | 15  |                | 2              |                |\n",
    "| 1911 | 81  |     | -3             |                | -3             |\n",
    "|      |     | 12  |                | -1             |                |\n",
    "| 1921 | 93  |     | -4             |                |                |\n",
    "|      |     | 8   |                |                |                |\n",
    "| 1931 | 101 |     |                |                |                |\n",
    "\n",
    "The value of x at you want to find the f(x):x=1925\n",
    "\n",
    "h=x1-x0=1901-1891=10\n",
    "\n",
    "p=(1925-1931)/10= -0.6\n",
    "\n",
    "Newton’s backward interpolation formula is:\n",
    "\n",
    "# p=x<sub>n</sub>h\n",
    "\n",
    "# y(x)=y<sub>n</sub> +p∇y<sub>n</sub>+p(p+1)2!- ∇2y<sub>n</sub>+p(p+1)(p+2)3!- ∇3y<sub>n</sub>+p(p+1)(p+2)(p+3)4!.....\n",
    "\n",
    "# \n",
    "\n",
    "# y(1925)=101+(-0.6)x8+(-0.6)(-0.6+1)2x -4 +(-0.6)(-0.6+1)(-0.6+2)6x(-1)+(-0.6)(-0.6+1)(-0.6+2)(-0.6+3)24 x -3\n",
    "\n",
    "# \n",
    "\n",
    "# y(1925)=96.8368\n",
    "\n",
    "# \n",
    "\n",
    "# solution of newton’s backward interpolation method for y(1925) is 96.8368\n",
    "\n",
    "**Lagrange’s Interpolation:**\n",
    "\n",
    "#  Interpolation is a method of finding new data points within the range of a discrete set of known data points \n",
    "\n",
    "For example, in the given table we’re given 4 set of discrete data\n",
    "points, for an unknown function f(x) :  \n",
    " \n",
    "\n",
    " \n",
    "\n",
    "**How to find?**   \n",
    "Here we can apply the Lagrange’s interpolation formula to get our\n",
    "solution.   \n",
    "The Lagrange’s Interpolation formula: \n",
    "\n",
    "<img src=\"attachment:vertopal_8c166dffc83e48d7a91d80b66074b9ba/media/image5.png\" style=\"width:6in;height:0.23958in\" />  \n",
    "If, y = f(x) takes the values y0, y1, … , yn corresponding to x = x0, x1\n",
    ", … , xn then,  \n",
    " \n",
    "\n",
    "This method is preferred over its counterparts like Newton’s method\n",
    "because it is applicable even for unequally spaced values of x.  \n",
    "We can use interpolation techniques to find an intermediate data point\n",
    "say at x = 3.   \n",
    " \n",
    "\n",
    "**Advantages of Lagrange Interpolation:**\n",
    "\n",
    "-   This formula is used to find the value of the function even when the\n",
    "    > arguments are not equally spaced.\n",
    "\n",
    "-   This formula is used to find the value of independent variable x\n",
    "    > corresponding to a given value of a function.\n",
    "\n",
    "-   \n",
    "\n",
    "**Disadvantages of Lagrange Interpolation:**  \n",
    "** **\n",
    "\n",
    "-   A change of degree** **in Lagrangian polynomial involves a\n",
    "    > completely new computation of all the terms.\n",
    "\n",
    "-   For a polynomial of high degree, the formula involves a large number\n",
    "    > of multiplications which make the process quite slow.\n",
    "\n",
    "-   In the Lagrange Interpolation, the degree of polynomial is chosen at\n",
    "    > the outset. So, it is difficult to find the degree of\n",
    "    > approximating polynomial which is suitable for given set of\n",
    "    > tabulated points."
   ],
   "attachments": {
    "vertopal_8c166dffc83e48d7a91d80b66074b9ba/media/image3.png": {
     "image/png": "iVBORw0KGgoAAAANSUhEUgAAALcAAAAWCAYAAACCLg3UAAAE60lEQVR4nO2b3bHbNhCFv2RcADuI\nUkGYCkI/JzNhOmAHuR1Y6UAlsIPoIe+RO1AHYTpQGrDzABxjhQuQoH4o2eaZ4VCX5C5A8GBxsMCF\nFc+CCmiB2v+99ceS6IDDFfYN7h2Eg7+2FDaYdvt2wYJXjKMHTgRyw/Lk7rmc3DVpcl/TWeZiwLTZ\nmwULXjGOimWJcGu0LE/mUazkfjwkR8BFv2PimRo35Or5CtgV+q/9cbrAthSK2gOunkPiGUmugzmn\n3jWF1vs9zrGdI0s6XMhfUkM9Cmfa7c44+fOe9AerfH32vj57gnTZAC+4b5NC5Z/t/XMilmxbf71O\nWpfj6P31pIktLX/0v9UJwPEpljNjtioLb5PtqLnI3XkHPwC/+Wv64F8DpN2Wet8aR9oUTv5e5X+f\nCGQecB87F3BOOMLh7Qdju8ORo/L+Uz7sBDf2G5MqRWpBdVBHO5i/1SnUyeIOLtvG19PKnr23SyJH\n7i35F1txe9TkO5KkhIZjPV86pG/8Edu25n6OmHvync6imaiPymxwnULvJJ2OuR/7Uf1i27HOBKRl\nibSTbYAV94WicgotYSQVIaoJfwOOUJ0/FJVj28rfy0a/Qkx1tt6XrWyQpEkOlvS9r2Op7SekIndD\n+YxXDWUnK0UFT8BGk7HI8mift4AmSjn0hPra9p7y2UzYVsA7XGRuCcP/JRgbeSB0rj3no4jkkJ1k\n6rrQmrO1nURM7i1BwE9pzoYwXEoLSuBfmg6yWQPrs6dseCzxOfhrR26fNZgLacipeqgjxqRWNI+z\nFB2hvXK2LfAf8JbLO7omg2rXHGzZ9jlNDq1agBAox2xVvu0gZ0iRWwSd0lAQGrAj9CwbHfXcgbJo\nI5+asGjCYV+qpjwnrAaST0UyGwFUT01spuop6MNOYSxASA6kiFEyqR0ytnrfMaQiteRPKQ7ROYaI\nO/atckGrZCSJ8+objGz5JmHwMXPdNrQl3M7/ttGnIuisyttN6TqrO7fR2dZBZZdkMqzPDkfil+h+\nR5io2FSZyrtXxuQX4Oc7+V4BH+LIXQPvCwxttGh4nWdVPhJeLynnYCNNQ5pUc8kW+4yjhCLLjiCD\nSuccG+C7gudy7fmXP1bcCXG2pDTFJK1X4XLhspG+Tc3m7RCeuq/FCoCfCATLLVCk6jTm06aZVE+b\nEdL8YU6K7W3BseJBSEXukslFTxjKFZk0YZtCC/wJfB+VpeT+Cfh3ps8G+Bv4kXNyyqf82qxODK2+\nlmrup9pHseI1UpG75IO94EigJVFp6zFbEfmAW/WMI+3W+1MyXxG1JEtyxEXJmLQvplz51CqZxY6w\ndDyVQ/7coclzhRshbwGNypqsPxXGZu3CHK2rzIMQE9RuBJqLnO622Zk56IBfcR/6d87J/aVtN1AQ\n6gkTaRGzwbXDnM5d4bhTEYKSDXAND1zlfsN5+uTalSphwL2kzZZYaCPQXFjZFOvj0U00GUiT245W\nKks+Rwy491MqVClDrW1oH4sI35GfNP9B2GGorJS+Of66slstl69TXI2SnO0Wt6J17a7Aew37t/S7\nwb3rNat2zwy7WAJhQc7em4OW8zQxnEfwdW6y4q7YEGRILhPVJa6NQftW5Fd7VeAJyL3+s8LXA8kG\nCCvR8R6O3IpnDlo+t+ROyY8vWeqteHJ0wD+4dOolsiSFLWEX30P+weV/qwdXaDYMVAcAAAAASUVO\nRK5CYII=\n"
    },
    "vertopal_8c166dffc83e48d7a91d80b66074b9ba/media/image5.png": {
     "image/png": "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\n"
    },
    "vertopal_8c166dffc83e48d7a91d80b66074b9ba/media/image2.png": {
     "image/png": "iVBORw0KGgoAAAANSUhEUgAAAIkAAAAWCAYAAAD0FL9fAAAEP0lEQVRoge2aLbMTSRSGn1oQK0fi\ndnDXEbe4jeNWgRgcjsh1O/+A/IRIZCSOGPzgkJHISORIHIjud7tz0j2fuZdLJW9VqqZnes6c9Dn9\nno8ZuGIKCqACFubcaqK8tb//3PrUE+XVM/W5AtgBS46dYj1DXjHz/q3XJ3aKufpsNHg8Q9AlowCa\naLwEDjPktZHctmtiBguvTxON5+pzAErg8GiGoEtEAbwhGEGGqIH3wPdo3q3//YljnAP9DnALfBmp\nz21Cn39x7GL1ee6Pl16XLn2+S58/Rii0wlHYcsQ994ESp9cceh0KLWq8a8EZKV7wFS4kFV6/mCkq\n0ro2jM8DcvosOdan8vqU/hdj5edX5vwen+Pkws3KC3sGvPbnZIyHhgP35yTg1qHpmaN4rsWPDbYj\nn1BqA3YlnTucAQWFmi5sM/rUXlaDW7/G6FpC3knWnGbLVzgsiZK6DEqc8yrHWHBs2Nw9MnbLcKdf\nEJxAsGFE+ojVNLb/JXa4ws8hFW6UhO05paAr0smlqFzXNzg23uPWc8hmm5psyuAxmuiZ0qeOzscp\nQy7EdTp2jrpT5wrzEBvvpqLMHHfhPsJNyemu1fnajFPHQio8bBifkxQ4B03pszbj1HFNcBj7/P/H\ntrpZ43aAKNImQ3Z8QwhLN/6h35heflVejjL2G69PQT9dW/3OjR2uUvmA+48xWlzl8BVXFbTmmlD4\nea2fJzmllz2mshF7feB0vWW/Pn2++HlP/NyvKX1sTqJcZEO3UeSN8uKVvy+mvpJAeTYh6pPZeh0W\n/rxN1Gyfog9LhlVlXWwkpshtgA2hisih5bQSkX4phuqCuqI5Oynk9clN6XukTypxfdbx4Bj6o/EO\n1iIrDlaEbmJfi7iNFI5ZLDacWGWsk6QMMwYvgVcD576Y+Iy/J953V3J13w/rJAvg8wAB8W6y7Wlw\nziFHE/X1dRPja7mdpfbz2F5NCfw1YF7uv3/yv4tEykmGsEjcIIqZJ27aWNjyyjqMGEKlmRyvj8KH\nYMGwCmPIBrk4pJxkSNK5JWS/WljbdcyhAj4CT82ztjgnUnu5Zfq7DIsd8x3tYmH7JEO6d+DyixbH\nIEpa4zwhZVg5RIPr4lq2WRMcpCIkwndZsdwnCuAff6zwOxdxm/3OXpeISWocM9hKIgc7x7LPjtNK\nQXP0htE60t7IzTHa7/idgyq9A25tNoTqg+jaGNbU+xm1LNRJ3RKcZz9SZhKPvTA9aOpHKhZaDDGM\nlVsyjf61A5W3/C4so6aXutkNx3lcRQi34NbnbUbWZ0JLQTIkT46ixF+d1rNgSMWwBt4NmNcH26Wd\nixKn19g+w69ATWCPeA3mvF2P2VftBsl6iG/tr8hgTcj3loTdHl8fa0yFFbGPekhnd5Ix35NcMR0N\nIazrG5O5oXKHczy9f1G4sTnIOarDK34xFriWwH+cr+LRh9V9nzQMwk8lDB5PjJEGwwAAAABJRU5E\nrkJggg==\n"
    },
    "vertopal_8c166dffc83e48d7a91d80b66074b9ba/media/image4.png": {
     "image/png": "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\n1UNQqSyc/wO0tvCLjvqp/QAAAABJRU5ErkJggg==\n"
    },
    "vertopal_8c166dffc83e48d7a91d80b66074b9ba/media/image1.png": {
     "image/png": "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\nAABJRU5ErkJggg==\n"
    }
   }
  }
 ],
 "nbformat": 4,
 "nbformat_minor": 5,
 "metadata": {}
}
